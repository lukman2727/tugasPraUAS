/*
 * Copyright (C) 2016 Iyongb
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package ib.perpustakaan.main;

import ib.perpustakaan.data.entity.Perpustakaan;
import ib.perpustakaan.data.implement.ImplementPerpustakaan;
import ib.perpustakaan.data.view.FAnggota;
import ib.perpustakaan.data.view.FBuku;
import ib.perpustakaan.layanan.view.FPeminjaman;
import ib.perpustakaan.layanan.view.FPengembalian;
import ib.perpustakaan.lib.ButtonColumn;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JTable;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Iyongb
 */
public class JPUtama extends javax.swing.JPanel {

    List<Perpustakaan> record = new ArrayList<>(); //untuk menampung getAll() dari barangImplement
    ImplementPerpustakaan implement;
    int row;

    
    public JPUtama() {
        initComponents();
        implement = new ImplementPerpustakaan();
        tblPerpustakaan.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                row = tblPerpustakaan.getSelectedRow();
            }
        });
        
        statusAwal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPerpustakaan = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnCari = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 255, 255));

        tblPerpustakaan.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblPerpustakaan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPerpustakaan.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblPerpustakaan.setRowHeight(25);
        tblPerpustakaan.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblPerpustakaan.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblPerpustakaan);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setText("Perpustakaan");

        jLabel2.setText("Cari :");

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });

        btnTambah.setText("Tambah Buku");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(486, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCari, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))))
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCari)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTambah)
                        .addComponent(btnUbah)
                        .addComponent(btnHapus)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        FBuku form = new FBuku(javax.swing.JOptionPane.getFrameForComponent(this), true);
        form.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                tampilDataKeJTable();
            }
        });
        form.formTambah();
        form.setLocationRelativeTo(this);
        form.setVisible(true);
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        FBuku form = new FBuku(javax.swing.JOptionPane.getFrameForComponent(this), true);
        form.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                tampilDataKeJTable();
            }
        });
        String kode_buku = record.get(row).getKodeBuku();
        form.setSelection(kode_buku);
        form.formUbah();
        form.setLocationRelativeTo(this);
        form.setVisible(true);
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        cariData();
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        FBuku form = new FBuku(javax.swing.JOptionPane.getFrameForComponent(this), true);
        form.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                tampilDataKeJTable();
            }
        });
        String kode_buku = record.get(row).getKodeBuku();
        form.setSelection(kode_buku);
        form.hapusData();
        form.dispose();
//        form.setLocationRelativeTo(this);
//        form.setVisible(true);
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        cariData();
    }//GEN-LAST:event_txtCariActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPerpustakaan;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables

    private void statusAwal() {
        tampilDataKeJTable();
    }
    
    public void tampilDataKeJTable() {
        cariData();
        isiTabel();
    }

    private void isiTabel() {
        Object data[][] = new Object[record.size()][7];
        int x = 0;
        for (Perpustakaan list:record)
        {
            data[x][0] = list.getKodeBuku();
            data[x][1] = list.getJudul();
            data[x][2] = list.getPengarang();
            data[x][3] = list.getPenerbit();
            data[x][4] = list.getTahunTerbit();
            String status = "Ada";
            String button = "Pinjam";
            try{
                if(list.getStatus().equals("0"))
                {
                    status = "Dipinjam";
                    button = "Kembalikan";
                }
            }catch(NullPointerException npe)
            {
                
            }
            data[x][5] = status;
            data[x][6] = button;
            x++;
        }
        
        String[] judul = {"Kode Buku", "Nama Buku", "Pengarang", "Penerbit", "Tahun Terbit", "Status", ""};
        DefaultTableModel tabModel = new DefaultTableModel(data, judul)
        {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return columnIndex == 6;
            }
        };
        tblPerpustakaan.setModel(tabModel);
        tblPerpustakaan.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblPerpustakaan.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblPerpustakaan.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblPerpustakaan.getColumnModel().getColumn(2).setPreferredWidth(200);
        tblPerpustakaan.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        
        Action button = new AbstractAction()
        {
            public void actionPerformed(ActionEvent e)
            {
//                JTable table = (JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
//                ((DefaultTableModel)table.getModel()).removeRow(modelRow);
                Perpustakaan list = record.get(modelRow);
                if(list.getStatus().equals("0"))
                {    
                    String noPinjam = record.get(modelRow).getNoPinjam();
                    formPengembalian(noPinjam);
                }
                else
                {
                    String kodeBuku = record.get(modelRow).getKodeBuku();
                    String judulBuku = record.get(modelRow).getJudul();
                    formPeminjaman(kodeBuku, judulBuku);
                }
            }
        };
        ButtonColumn buttonColumn = new ButtonColumn(tblPerpustakaan, button, 6);
        buttonColumn.setMnemonic(KeyEvent.VK_D);
//        JButton[] button = new JButton[]{
//            new JButton("Pinjam")
//        };
//        
//        java.util.List<JButton> buttons = Fungsi.setButtonTable(tblPerpustakaan, 6, button);
//        
//        buttons.get(0).addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                int row = tblPerpustakaan.getSelectedRow();
//                String kodeBerkas = tblPerpustakaan.getValueAt(row, 1).toString();
//                System.out.println(kodeBerkas);
//            }
//        });
        
        jScrollPane1.setViewportView(tblPerpustakaan);
    }

    public void formPengembalian(String noPinjam) {
        FPengembalian form = new FPengembalian(javax.swing.JOptionPane.getFrameForComponent(this), true);
        form.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                tampilDataKeJTable();
            }
        });
        form.setLocationRelativeTo(javax.swing.JOptionPane.getFrameForComponent(this));
        form.setNoPinjam(noPinjam);
        form.setVisible(true);
    }
    
    public void formPeminjaman(String kodeBuku, String judulBuku) {
        FPeminjaman form = new FPeminjaman(javax.swing.JOptionPane.getFrameForComponent(this), true);
        form.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                tampilDataKeJTable();
            }
        });
        form.setLocationRelativeTo(javax.swing.JOptionPane.getFrameForComponent(this));
        form.addRowTabel(kodeBuku, judulBuku);
        form.setVisible(true);
    }
    
    private void cariData()
    {
        try {
            if(txtCari.getText().equals(""))
            {
                record = implement.getBuku();   
            }
            else
            {
                record = implement.cariBuku(txtCari.getText());
            }
        } catch (SQLException ex) {
            Logger.getLogger(FAnggota.class.getName()).log(Level.SEVERE, null, ex);
        }
        isiTabel();
    }
}

