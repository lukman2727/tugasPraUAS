/*
 * Copyright (C) 2016 Iyongb
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package ib.perpustakaan.layanan.view;

import ib.perpustakaan.data.entity.Perpustakaan;
import ib.perpustakaan.lib.ButtonColumn;
import ib.perpustakaan.lib.Fungsi;
import ib.perpustakaan.lib.Koneksi3;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Iyongb
 */
public class FPengembalian extends javax.swing.JDialog {

    public DefaultTableModel tabModel;
    public FPengembalian(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        statusAwal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPengembalian = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNomorPinjam = new javax.swing.JTextField();
        txtTanggal = new javax.swing.JTextField();
        txtAnggota = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PELAYANAN PENGEMBALIAN BUKU");

        tblPengembalian.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPengembalian.setRowHeight(25);
        tblPengembalian.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblPengembalian);

        jLabel1.setText("Nomor Pinjam");

        jLabel2.setText("Tanggal");

        jLabel3.setText("Anggota");

        txtNomorPinjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomorPinjamActionPerformed(evt);
            }
        });
        txtNomorPinjam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomorPinjamKeyReleased(evt);
            }
        });

        txtTanggal.setEditable(false);

        txtAnggota.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomorPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNomorPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomorPinjamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomorPinjamKeyReleased
        getNomorPinjam();
    }//GEN-LAST:event_txtNomorPinjamKeyReleased

    private void txtNomorPinjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomorPinjamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomorPinjamActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPengembalian.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FPengembalian dialog = new FPengembalian(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPengembalian;
    private javax.swing.JTextField txtAnggota;
    private javax.swing.JTextField txtNomorPinjam;
    private javax.swing.JTextField txtTanggal;
    // End of variables declaration//GEN-END:variables

    private void statusAwal() {
        txtNomorPinjam.setText("");
        
        setJTable();
    }
    
    private void getNomorPinjam() {
        if(!txtNomorPinjam.getText().equals(""))
        {
            hapusIsiTabel();
            try
            {
                Connection con = Koneksi3.getConnection();

                String sql = "SELECT * "
                        + "FROM anggota "
                        + "INNER JOIN ("
                        + "(buku INNER JOIN detailpinjam ON buku.KodeBuku = detailpinjam.KodeBuku) "
                        + "INNER JOIN pinjam ON detailpinjam.NoPinjam = pinjam.NoPinjam) "
                        + "ON anggota.NoAnggota = pinjam.NoAnggota "
                        + "WHERE pinjam.NoPinjam = ?";

                PreparedStatement st = con.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
                st.setString(1, txtNomorPinjam.getText());

                ResultSet rs = st.executeQuery();
                if(rs.next())
                {
                    txtTanggal.setText(rs.getString("TglPinjam"));
                    txtAnggota.setText(rs.getString("NoAnggota") + " - " +rs.getString("Nama"));
                    rs.beforeFirst();
                    while (rs.next()) {
                        String kodeBuku = rs.getString("KodeBuku");
                        String Judul = rs.getString("Judul");
                        String status = rs.getString("Status");
                        String tombol = "Kembalikan?";
                        if(status.equals("1"))
                        {
                            tombol = "Sudah dikembalikan";
                        }
                        Object[] rowData = new String[]{kodeBuku, Judul, status, tombol};
                        tabModel.addRow(rowData);
                    }
                    
                    Action button = new AbstractAction()
                    {
                        public void actionPerformed(ActionEvent e)
                        {
                            int modelRow = Integer.valueOf( e.getActionCommand() );
                            String list = tabModel.getValueAt(modelRow, 2).toString();
                            if(list.equals("0"))
                            {
                                String kodeBuku = tabModel.getValueAt(modelRow, 0).toString();
                                String noPinjam = txtNomorPinjam.getText();
                                kembalikanBuku(noPinjam, kodeBuku);
                            }
                            else
                            {
                                
                            }
                        }
                    };
                    ButtonColumn buttonColumn = new ButtonColumn(tblPengembalian, button, 3);
                    buttonColumn.setMnemonic(KeyEvent.VK_D);
                }
                else
                {
                    txtTanggal.setText("");
                    txtAnggota.setText("");
                }
            }
            catch(Exception e)
            {
                System.out.println("Koneksi Gagal " + e.getMessage());
            }
        }
        else
        {
            statusAwal();
        }
    }
    
    public int kembalikanBuku(String noPinjam, String kodeBuku) {
        int konfirmasi = JOptionPane.showConfirmDialog(rootPane, "Apakah Kode Buku "+kodeBuku+" sudah dikembalikan?", "KONFIRMASI", JOptionPane.YES_NO_OPTION);
        if(konfirmasi == JOptionPane.YES_OPTION)
        {
            try {
                String sql = "UPDATE detailpinjam SET Status = 1 WHERE NoPinjam = ? AND KodeBuku = ?";
                PreparedStatement ps = Koneksi3.getConnection().prepareStatement(sql);
                ps.setString(1, noPinjam);
                ps.setString(2, kodeBuku);
                
                int row = tblPengembalian.getSelectedRow();
                tblPengembalian.setValueAt("1", row, 2);
                tblPengembalian.setValueAt("Sudah dikembalikan", row, 3);
                
                return ps.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(FPengembalian.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return 0;
    }
    
    private void setJTable()
    {
        String[] JudulKolom = {"Kode Buku", "Judul", "", ""};
        tabModel = new DefaultTableModel(null, JudulKolom)
        {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return columnIndex == 3;
            }
        };
        
        tblPengembalian.setModel(tabModel);
        tblPengembalian.getColumnModel().getColumn(0).setPreferredWidth(100);
        tblPengembalian.getColumnModel().getColumn(1).setPreferredWidth(200);
        Fungsi.setColumnHidden(tblPengembalian, 2);
    }

    private void hapusIsiTabel() {
        try{
        for(int i = 0; i <= tblPengembalian.getRowCount(); i++)
        {
            tabModel.removeRow(0);
        }}catch(ArrayIndexOutOfBoundsException e)
        {
            
        }
    }

    public void setNoPinjam(String noPinjam) {
        txtNomorPinjam.setText(noPinjam);
        txtNomorPinjamKeyReleased(null);
    }
}
