package ib.perpustakaan.layanan.view;


import ib.perpustakaan.lib.Koneksi3;
import ib.perpustakaan.main.JPUtama;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Mahasiswa
 */
public class FPeminjaman extends javax.swing.JDialog {

    public DefaultTableModel tabModel;
    
    /**
     *
     * @param parent
     * @param modal
     */
    public FPeminjaman(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        statusAwal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNoPinjam = new javax.swing.JTextField();
        txtNoAnggota = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtKodeBuku = new javax.swing.JTextField();
        txtJudul = new javax.swing.JTextField();
        cbxStatus = new javax.swing.JCheckBox();
        BTambah = new javax.swing.JButton();
        BHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TPinjam = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        BSimpan = new javax.swing.JButton();
        BBatal = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PELAYANAN PEMINJAMAN");

        jLabel1.setText("No Pinjam");

        jLabel2.setText("No Anggota");

        jLabel3.setText("Nama Anggota");

        txtNoPinjam.setEnabled(false);
        txtNoPinjam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoPinjamKeyReleased(evt);
            }
        });

        txtNoAnggota.setEnabled(false);
        txtNoAnggota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoAnggotaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoAnggotaKeyReleased(evt);
            }
        });

        txtNama.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNoPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNoAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNoPinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNoAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setText("Kode Buku");

        jLabel7.setText("Judul Buku");

        jLabel8.setText("Status Buku");

        txtKodeBuku.setEnabled(false);
        txtKodeBuku.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKodeBukuKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKodeBukuKeyReleased(evt);
            }
        });

        txtJudul.setEnabled(false);

        cbxStatus.setText("Tersedia");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtKodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtKodeBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cbxStatus))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BTambah.setText("TAMBAH BUKU");
        BTambah.setEnabled(false);
        BTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTambahActionPerformed(evt);
            }
        });

        BHapus.setText("HAPUS BUKU");
        BHapus.setEnabled(false);
        BHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BHapusActionPerformed(evt);
            }
        });

        TPinjam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TPinjam.setRowHeight(20);
        TPinjam.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(TPinjam);

        BSimpan.setText("SIMPAN");
        BSimpan.setEnabled(false);
        BSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSimpanActionPerformed(evt);
            }
        });

        BBatal.setText("BATAL");
        BBatal.setEnabled(false);
        BBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBatalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BSimpan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
            .addComponent(BBatal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTambah)
                    .addComponent(BHapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNoAnggotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoAnggotaKeyPressed
        
    }//GEN-LAST:event_txtNoAnggotaKeyPressed

    private void txtKodeBukuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodeBukuKeyPressed
        
    }//GEN-LAST:event_txtKodeBukuKeyPressed

    private void BTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTambahActionPerformed
        if(txtNama.getText().equals("") || txtNoPinjam.getText().equals(""))
        {
            JOptionPane.showMessageDialog(rootPane, "Harap isi No Pinjam dan Anggota terlebih dahulu", "KONFIRMASI" , JOptionPane.WARNING_MESSAGE);
            txtNoPinjam.requestFocus();
        }
        else
        {
            tambahBuku();
        }
    }//GEN-LAST:event_BTambahActionPerformed

    private void BHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BHapusActionPerformed
        hapusBuku();
    }//GEN-LAST:event_BHapusActionPerformed

    private void BSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSimpanActionPerformed
        try
        {
            Connection con = Koneksi3.getConnection();
            
            if(txtNama.getText().isEmpty() || tabModel.getRowCount() == 0)
            {
                JOptionPane.showMessageDialog(rootPane, "Silahkan Input Anggota dan Buku", "INFORMASI", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                Date tgl_sekarang = new Date();
                SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
                
                String sql = "INSERT INTO Pinjam VALUES(?, ?, ?)";
                PreparedStatement st = con.prepareStatement(sql);
                
                st.setString(1, txtNoPinjam.getText());
                st.setString(2, format.format(tgl_sekarang));
                st.setString(3, txtNoAnggota.getText());
                
                int rs = st.executeUpdate();
                
                String KodeBuku;
                int rs2 = 0;
                int jum = tabModel.getRowCount();
                for(int i = 0; i < jum; i++)
                {
                    String sql2 = "INSERT INTO DetailPinjam VALUES(?, ?, ?)";
                    PreparedStatement st2 = con.prepareStatement(sql2);
                    
                    KodeBuku = tabModel.getValueAt(i, 0).toString();
                    
                    st2.setString(1, txtNoPinjam.getText());
                    st2.setString(2, KodeBuku);
                    st2.setInt(3, 0);
                    
                    rs2 += st2.executeUpdate();
                    
                    String sql3 = "UPDATE Buku set Status = ? WHERE KodeBuku = ?";
                    PreparedStatement st3 = con.prepareStatement(sql3);
                    st3.setString(1, "Dipinjam");
                    st3.setString(2, KodeBuku);
                }
                
                if((rs > 0) && (rs2 > 0))
                {
                    JOptionPane.showMessageDialog(rootPane, "Peminjaman Berhasil");
                    statusAwal();
                    
                    this.dispose();
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "Peminjaman Gagal");
                }
            }
        }
        catch(Exception e)
        {
            System.out.println("Exception : " + e);
            JOptionPane.showMessageDialog(rootPane, "No pinjam sudah digunakan, harap diubah", "PEMBERITAHUAN", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_BSimpanActionPerformed

    private void BBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBatalActionPerformed
        if(JOptionPane.showConfirmDialog(rootPane, "Apakah Anda yakin akan membatalkannya?", "KONFIRMASI", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
        {
            statusAwal();
        }
    }//GEN-LAST:event_BBatalActionPerformed

    private void txtNoAnggotaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoAnggotaKeyReleased
        getAnggota();
        cekForm();
    }//GEN-LAST:event_txtNoAnggotaKeyReleased

    private void txtKodeBukuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodeBukuKeyReleased
        getBuku();
    }//GEN-LAST:event_txtKodeBukuKeyReleased

    private void txtNoPinjamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoPinjamKeyReleased
        cekForm();
    }//GEN-LAST:event_txtNoPinjamKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPeminjaman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FPeminjaman dialog = new FPeminjaman(new javax.swing.JFrame(), false);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BBatal;
    private javax.swing.JButton BHapus;
    private javax.swing.JButton BSimpan;
    private javax.swing.JButton BTambah;
    private javax.swing.JTable TPinjam;
    private javax.swing.JCheckBox cbxStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtKodeBuku;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtNoAnggota;
    private javax.swing.JTextField txtNoPinjam;
    // End of variables declaration//GEN-END:variables

    private void statusAwal() {
        txtNoPinjam.setText("");
        txtNoAnggota.setText("");
        txtNama.setText("");
        
        txtKodeBuku.setText("");
        txtJudul.setText("");
        cbxStatus.setSelected(false);
        
        txtNoPinjam.setEnabled(true);
        txtNoAnggota.setEnabled(true);
        txtNama.setEnabled(false);
        
        txtKodeBuku.setEnabled(true);
        txtJudul.setEnabled(false);
        cbxStatus.setEnabled(false);
        
        BTambah.setEnabled(false);
        BHapus.setEnabled(false);
        
        BSimpan.setEnabled(false);
        BBatal.setEnabled(false);
        
        setJTable();
    }
    
    private void setJTable()
    {
        String[] JudulKolom = {"Kode Buku", "Judul"};
        tabModel = new DefaultTableModel(null, JudulKolom)
        {
            boolean[] canEdit = new boolean[]{false, false};
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit[columnIndex];
            }
        };
        
        TPinjam.setModel(tabModel);
        TPinjam.getColumnModel().getColumn(0).setPreferredWidth(100);
        TPinjam.getColumnModel().getColumn(1).setPreferredWidth(200);
    }

    private void getAnggota() {
        try
        {
            Connection con = Koneksi3.getConnection();

            String sql = "SELECT * FROM Anggota WHERE NoAnggota = ?";

            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, txtNoAnggota.getText());

            ResultSet rs = st.executeQuery();
            if(rs.next())
            {
                txtNama.setText(rs.getString("Nama"));
            }
            else
            {
                txtNama.setText("");
            }
        }
        catch(Exception e)
        {
            System.out.println("Koneksi Gagal " + e.getMessage());
        }
    }

    private void getBuku() {
        try
            {
                Connection con = Koneksi3.getConnection();
                String sql = "SELECT b.Judul, dp.Status FROM Buku b LEFT JOIN detailpinjam dp ON(dp.KodeBuku = b.KodeBuku AND dp.Status = '0') Where b.KodeBuku = ?";
                
                PreparedStatement st = con.prepareStatement(sql);
                st.setString(1, txtKodeBuku.getText());
                
                ResultSet rs = st.executeQuery();
                
                if(rs.next())
                {
                    txtJudul.setText(rs.getString("Judul"));
                    try
                    {
                        BTambah.setEnabled(false);
                        cbxStatus.setSelected(!rs.getString("Status").equals("0"));
                    }
                    catch(NullPointerException n)
                    {
                        BTambah.setEnabled(true);
                        cbxStatus.setSelected(true);
                    }
                }
                else
                {
                    txtJudul.setText("");
                    cbxStatus.setSelected(false);
                    BTambah.setEnabled(false);
                }
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
    }

    private void tambahBuku() {
        String KodeBuku;
        boolean ketemu = false;
        
        int jum = tabModel.getRowCount();
        if(cbxStatus.isSelected())
        {
            for(int i = 0; i < jum; i++)
            {
                KodeBuku = tabModel.getValueAt(i, 0).toString();
                if(KodeBuku.equalsIgnoreCase(txtKodeBuku.getText()))
                {
                    JOptionPane.showMessageDialog(rootPane, "Buku Sudah Ada Pada List Pinjaman", "INFORMASI", JOptionPane.INFORMATION_MESSAGE);
                    ketemu = true;
                    TPinjam.setRowSelectionInterval(i, i);
                    break;
                }
            }
            
            if(ketemu == false)
            {
                String Data[] = {txtKodeBuku.getText(), txtJudul.getText()};
                tabModel.addRow(Data);
                
                txtKodeBuku.setText("");
                txtJudul.setText("");
                cbxStatus.setSelected(false);
                txtNoPinjam.setEnabled(false);
                txtNoAnggota.setEnabled(false);
            }
            
            txtKodeBuku.requestFocus();
            cekForm();
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Buku Ini tidak tersedia, Sedang dipinjam", "Informasi", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void cekForm() {
        
        int jum = tabModel.getRowCount();
        
        boolean b;
        if(jum > 0 && !txtNama.getText().equals("") && !txtNoPinjam.getText().equals(""))
        {
            b = true;
        }
        else
        {
            b = false;
        }
        
//        txtNoPinjam.setEnabled(!b);
//        txtNoAnggota.setEnabled(!b);

        BHapus.setEnabled(b);

        BSimpan.setEnabled(b);
        BBatal.setEnabled(b);
    }

    private void hapusBuku() {
        int row = TPinjam.getSelectedRow();
        if(row >= 0)
        {
            tabModel.removeRow(row);
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Hapus GAGAL", "INFORMASI", JOptionPane.WARNING_MESSAGE);
        }
        cekForm();
    }

    public void addRowTabel(String kodeBuku, String judulBuku) {
        tabModel.addRow(new String[]{kodeBuku, judulBuku});
        
//        BSimpan.setEnabled(true);
        BBatal.setEnabled(true);
        BHapus.setEnabled(true);
//        BTambah.setEnabled(true);
    }
}
